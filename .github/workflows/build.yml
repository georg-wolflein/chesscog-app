name: build

on: [push, pull_request]

jobs:
  node_js:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          path: app/node_modules
          key: node_modules-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('app/**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        working-directory: app
      - name: Build
        run: npm run build
        working-directory: app
      - name: Test
        run: npm test
        working-directory: app

  python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('api/**/poetry.lock') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
        working-directory: api
      - name: Test with pytest
        run: |
          poetry run python -m pytest
        working-directory: api

  docker_compose:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: docker-compose -f docker-compose.prod.yml pull
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
      - run: docker-compose -f docker-compose.prod.yml up --build
